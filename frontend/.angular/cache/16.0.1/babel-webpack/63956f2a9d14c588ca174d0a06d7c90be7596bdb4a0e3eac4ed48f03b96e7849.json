{"ast":null,"code":"import * as earcut from 'earcut';\nimport { Layer } from '../draw/layer.model';\nimport { Point } from '../draw/point.model';\nimport { Room } from './room.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/room/room.service\";\nconst _c0 = [\"canvas\"];\nclass DrawComponent {\n  constructor(roomService) {\n    this.roomService = roomService;\n    this.mousePosition = {\n      x: 0,\n      y: 0\n    };\n    this.onKey = event => {\n      if (this.locked) return;\n      if (event.key === 'Escape') {\n        this.points = [];\n        while (this.layers.length > 1) this.layers.pop();\n        this.layers[0].reset();\n        this.ctx.restore();\n        this.isDrawing = false;\n      } else if (event.key === 'Backspace') {\n        if (this.points.length > 1 && this.layers.length > 1) {\n          this.points.pop();\n          this.layers.pop();\n          this.layers[this.layers.length - 1].reset();\n          this.ctx.restore();\n        } else {\n          this.points = [];\n          while (this.layers.length > 1) {\n            this.layers.pop();\n          }\n          this.layers[0].reset();\n          this.ctx.restore();\n          this.isDrawing = false;\n        }\n        // console.log(this.points);\n        // console.log(this.layers);\n      }\n    };\n\n    this.onMove = event => {\n      if (this.locked) return;\n      if (this.isDrawing) {\n        const currentCell = this.getCell(event.clientX, event.clientY);\n        if (Math.abs(currentCell.x - this.cell.x) > 0 || Math.abs(currentCell.y - this.cell.y) > 0) {\n          const layer = this.layers[this.layers.length - 1];\n          layer.reset();\n          this.ctx.restore();\n          this.cell = this.getCell(event.clientX, event.clientY);\n          this.mousePosition.x = event.clientX;\n          this.mousePosition.y = event.clientY;\n          this.ctx.beginPath();\n          // console.log(`coords: ${event.clientX}, ${event.clientY} start: ${(this.points[this.points.length - 1].x - 1) * 10}, ${(this.points[this.points.length - 1].y - 1) * 10} finish: ${(this.cell.x - 0.1) * 10}, ${(this.cell.y - 0.1) * 10}`);\n          this.ctx.moveTo(this.points[this.points.length - 1].x * 100, this.points[this.points.length - 1].y * 100);\n          this.ctx.lineTo(this.cell.x * 100, this.cell.y * 100);\n          this.ctx.strokeStyle = 'green';\n          this.ctx.lineWidth = 10;\n          this.ctx.lineCap = \"square\";\n          this.ctx.stroke();\n        }\n      }\n    };\n    this.onClick = event => {\n      if (this.locked) return;\n      this.cell = this.getCell(event.clientX, event.clientY);\n      if (this.points.length > 0 && this.points[0].x === this.cell.x && this.points[0].y === this.cell.y) {\n        this.isDrawing = false;\n        this.layers = [];\n        this.locked = true;\n        const vertices = this.points.flatMap(point => [point.x, point.y]);\n        const triangles = this.triangulatePolygon(vertices);\n        console.log(triangles);\n        this.room.area = this.roomService.calculateArea(this.points, triangles);\n        console.log(this.room.area);\n        if (this.roomService.createRoom(this.points)) {\n          this.roomService.saveRoom().subscribe({\n            next: response => {\n              console.log('Room saved successfully:', response);\n            },\n            error: error => {\n              console.error('Error saving room:', error);\n            }\n          });\n        }\n      } else {\n        this.isDrawing = true;\n      }\n      this.points.push(this.cell);\n      // console.log(this.points);\n      this.layers.push(new Layer(this.canvas.nativeElement));\n      // console.log(this.layers);\n    };\n\n    this.cell = new Point(0, 0);\n    this.isDrawing = false;\n    this.layers = [];\n    this.locked = false;\n    this.points = [];\n    this.room = new Room();\n  }\n  ngOnInit() {\n    this.canvasRect = this.canvas.nativeElement.getBoundingClientRect();\n    this.canvas.nativeElement.width = this.canvas.nativeElement.offsetWidth;\n    this.canvas.nativeElement.height = this.canvas.nativeElement.offsetHeight;\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.getGrid(100, 100);\n  }\n  getCell(x, y) {\n    console.log(`x: ${x} y: ${y} left: ${this.canvasRect.left} top: ${this.canvasRect.top}`);\n    return new Point(Math.floor(Math.abs(this.canvasRect.left - x) / 10) / 10, Math.floor(Math.abs(this.canvasRect.top - y) / 10) / 10);\n  }\n  getGrid(cellWidth, cellHeight) {\n    for (let x = 0; x <= this.canvas.nativeElement.width; x += cellWidth / 10) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(x + 0.5, 0);\n      this.ctx.lineTo(x + 0.5, this.canvas.nativeElement.height);\n      this.ctx.strokeStyle = '#eee';\n      this.ctx.stroke();\n    }\n    for (let y = 0; y <= this.canvas.nativeElement.height; y += cellHeight / 10) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(0, y + 0.5);\n      this.ctx.lineTo(this.canvas.nativeElement.width, y + 0.5);\n      this.ctx.strokeStyle = '#eee';\n      this.ctx.stroke();\n    }\n    for (let x = 0; x <= this.canvas.nativeElement.width; x += cellWidth) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(x + 0.5, 0);\n      this.ctx.lineTo(x + 0.5, this.canvas.nativeElement.height);\n      this.ctx.strokeStyle = '#000';\n      this.ctx.stroke();\n    }\n    for (let y = 0; y <= this.canvas.nativeElement.height; y += cellHeight) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(0, y + 0.5);\n      this.ctx.lineTo(this.canvas.nativeElement.width, y + 0.5);\n      this.ctx.strokeStyle = '#000';\n      this.ctx.stroke();\n    }\n    this.ctx.save();\n    this.layers.push(new Layer(this.canvas.nativeElement));\n    console.log(this.layers);\n    this.ctx.restore();\n  }\n  triangulatePolygon(vertices) {\n    const indices = earcut(vertices);\n    const triangles = [];\n    for (let i = 0; i < indices.length; i += 3) {\n      triangles.push([indices[i], indices[i + 1], indices[i + 2]]);\n    }\n    return triangles;\n  }\n}\nDrawComponent.ɵfac = function DrawComponent_Factory(t) {\n  return new (t || DrawComponent)(i0.ɵɵdirectiveInject(i1.RoomService));\n};\nDrawComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DrawComponent,\n  selectors: [[\"app-canvas\"]],\n  viewQuery: function DrawComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n    }\n  },\n  hostBindings: function DrawComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function DrawComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKey($event);\n      }, false, i0.ɵɵresolveWindow)(\"mousemove\", function DrawComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onMove($event);\n      })(\"mouseup\", function DrawComponent_mouseup_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[\"canvas\", \"\"]],\n  template: function DrawComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"canvas\", null, 0);\n    }\n  },\n  styles: [\"canvas[_ngcontent-%COMP%] {\\n    \\n    margin-top: 20px;\\n    width: 97.7vw;\\n    height: 2001px;\\n}\\n\\n.info[_ngcontent-%COMP%] {\\n    position: absolute;\\n    background-color: white;\\n    border: 1px solid black;\\n    padding: 10px;\\n    font-size: 12px;\\n    pointer-events: none; \\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZHJhdy9kcmF3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx3QkFBd0I7SUFDeEIsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHVCQUF1QjtJQUN2Qix1QkFBdUI7SUFDdkIsYUFBYTtJQUNiLGVBQWU7SUFDZixvQkFBb0IsRUFBRSx3Q0FBd0M7RUFDaEUiLCJzb3VyY2VzQ29udGVudCI6WyJjYW52YXMge1xuICAgIC8qIHBvc2l0aW9uOiBhYnNvbHV0ZTsgKi9cbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIHdpZHRoOiA5Ny43dnc7XG4gICAgaGVpZ2h0OiAyMDAxcHg7XG59XG5cbi5pbmZvIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBmb250LXNpemU6IDEycHg7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IC8qIMORwofDkcKCw5DCvsOQwrHDkcKLIMOQwr3DkMK1IMOQwrzDkMK1w5HCiMOQwrDDkcKCw5HCjCDDkcKAw5DCuMORwoHDkMK+w5DCssOQwrDDkMK9w5DCuMORwo4gw5DCvcOQwrAgY2FudmFzICovXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { DrawComponent };","map":{"version":3,"names":["earcut","Layer","Point","Room","DrawComponent","constructor","roomService","mousePosition","x","y","onKey","event","locked","key","points","layers","length","pop","reset","ctx","restore","isDrawing","onMove","currentCell","getCell","clientX","clientY","Math","abs","cell","layer","beginPath","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","onClick","vertices","flatMap","point","triangles","triangulatePolygon","console","log","room","area","calculateArea","createRoom","saveRoom","subscribe","next","response","error","push","canvas","nativeElement","ngOnInit","canvasRect","getBoundingClientRect","width","offsetWidth","height","offsetHeight","getContext","getGrid","left","top","floor","cellWidth","cellHeight","save","indices","i","i0","ɵɵdirectiveInject","i1","RoomService","selectors","viewQuery","DrawComponent_Query","rf","$event","ɵɵresolveWindow","DrawComponent_mousemove_HostBindingHandler","DrawComponent_mouseup_HostBindingHandler","ɵɵelement"],"sources":["/Users/nadia/Documents/floor/frontend/src/app/pages/draw/draw.component.ts"],"sourcesContent":["import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport * as earcut from 'earcut';\nimport { Layer } from '../draw/layer.model';\nimport { Point } from '../draw/point.model';\nimport { Room } from './room.model';\nimport { RoomService } from 'src/app/services/room/room.service';\n\n@Component({\n  selector: 'app-canvas',\n  template: `<canvas #canvas></canvas>`,\n  styleUrls: ['./draw.component.css']\n})\nexport class DrawComponent {\n  @ViewChild('canvas', { static: true })\n  canvas!: ElementRef<HTMLCanvasElement>;\n  private canvasRect!: DOMRect;\n  private cell: Point;\n  private ctx!: CanvasRenderingContext2D;\n  private isDrawing: boolean;\n  private layers: Layer[];\n  private locked: boolean;\n  private mousePosition: { x: number, y: number } = { x: 0, y: 0 };\n  private points: Point[];\n  private room: Room;\n\n  constructor(private roomService: RoomService) {\n    this.cell = new Point(0, 0);\n    this.isDrawing = false;\n    this.layers = [];\n    this.locked = false;\n    this.points = [];\n    this.room = new Room;\n  }\n\n  ngOnInit(): void {\n    this.canvasRect = this.canvas.nativeElement.getBoundingClientRect();\n    this.canvas.nativeElement.width = this.canvas.nativeElement.offsetWidth;\n    this.canvas.nativeElement.height = this.canvas.nativeElement.offsetHeight;\n    this.ctx = this.canvas.nativeElement.getContext('2d') as CanvasRenderingContext2D;\n    this.getGrid(100, 100);\n  }\n\n  @HostListener('window:keydown', ['$event'])\n  onKey = (event: KeyboardEvent) => {\n    if (this.locked) return;\n    if (event.key === 'Escape') {\n      this.points = [];\n      while (this.layers.length > 1) this.layers.pop();\n      this.layers[0].reset();\n      this.ctx.restore();\n      this.isDrawing = false;\n    } else if (event.key === 'Backspace') {\n      if (this.points.length > 1 && this.layers.length > 1) {\n        this.points.pop();\n        this.layers.pop();\n        this.layers[this.layers.length - 1].reset();\n        this.ctx.restore();\n      } else {\n        this.points = [];\n        while (this.layers.length > 1) {\n          this.layers.pop();\n        }\n        this.layers[0].reset();\n        this.ctx.restore();\n        this.isDrawing = false;\n      }\n      // console.log(this.points);\n      // console.log(this.layers);\n    }\n  }\n\n  @HostListener('mousemove', ['$event'])\n  onMove = (event: MouseEvent) => {\n    if (this.locked) return;\n    if (this.isDrawing) {\n      const currentCell = this.getCell(event.clientX, event.clientY);\n      if (Math.abs(currentCell.x - this.cell.x) > 0 || Math.abs(currentCell.y - this.cell.y) > 0) {\n        const layer = this.layers[this.layers.length - 1];\n        layer.reset();\n        this.ctx.restore();\n        this.cell = this.getCell(event.clientX, event.clientY);\n        this.mousePosition.x = event.clientX;\n        this.mousePosition.y = event.clientY;\n        this.ctx.beginPath();\n        // console.log(`coords: ${event.clientX}, ${event.clientY} start: ${(this.points[this.points.length - 1].x - 1) * 10}, ${(this.points[this.points.length - 1].y - 1) * 10} finish: ${(this.cell.x - 0.1) * 10}, ${(this.cell.y - 0.1) * 10}`);\n        this.ctx.moveTo((this.points[this.points.length - 1].x) * 100, (this.points[this.points.length - 1].y) * 100);\n        this.ctx.lineTo((this.cell.x) * 100, (this.cell.y) * 100);\n        this.ctx.strokeStyle = 'green';\n        this.ctx.lineWidth = 10;\n        this.ctx.lineCap = \"square\";\n        this.ctx.stroke();\n      }\n    }\n  }\n\n  @HostListener('mouseup', ['$event'])\n  onClick = (event: MouseEvent) => {\n    if (this.locked) return;\n    this.cell = this.getCell(event.clientX, event.clientY);\n    if (this.points.length > 0 && this.points[0].x === this.cell.x && this.points[0].y === this.cell.y) {\n      this.isDrawing = false;\n      this.layers = [];\n      this.locked = true;\n      const vertices: number[] = this.points.flatMap(point => [point.x, point.y]);\n      const triangles: number[][] = this.triangulatePolygon(vertices);\n      console.log(triangles);\n      this.room.area = this.roomService.calculateArea(this.points, triangles);\n      console.log(this.room.area);\n      if (this.roomService.createRoom(this.points)) {\n        this.roomService.saveRoom().subscribe({\n          next: response => {\n            console.log('Room saved successfully:', response);\n          },\n          error: error => {\n            console.error('Error saving room:', error);\n          }\n        });\n      }\n    } else {\n      this.isDrawing = true;\n    }\n    this.points.push(this.cell);\n    // console.log(this.points);\n    this.layers.push(new Layer(this.canvas.nativeElement));\n    // console.log(this.layers);\n  }\n\n  private getCell(x: number, y: number): Point {\n    console.log(`x: ${x} y: ${y} left: ${this.canvasRect.left} top: ${this.canvasRect.top}`);\n    return new Point(Math.floor(Math.abs(this.canvasRect.left - x) / 10) / 10, Math.floor(Math.abs(this.canvasRect.top - y) / 10) / 10);\n  }\n\n  private getGrid(cellWidth: number, cellHeight: number): void {\n    for (let x = 0; x <= this.canvas.nativeElement.width; x += cellWidth / 10) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(x + 0.5, 0);\n      this.ctx.lineTo(x + 0.5, this.canvas.nativeElement.height);\n      this.ctx.strokeStyle = '#eee';\n      this.ctx.stroke();\n    }\n\n    for (let y = 0; y <= this.canvas.nativeElement.height; y += cellHeight / 10) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(0, y + 0.5);\n      this.ctx.lineTo(this.canvas.nativeElement.width, y + 0.5);\n      this.ctx.strokeStyle = '#eee';\n      this.ctx.stroke();\n    }\n\n    for (let x = 0; x <= this.canvas.nativeElement.width; x += cellWidth) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(x + 0.5, 0);\n      this.ctx.lineTo(x + 0.5, this.canvas.nativeElement.height);\n      this.ctx.strokeStyle = '#000';\n      this.ctx.stroke();\n    }\n\n    for (let y = 0; y <= this.canvas.nativeElement.height; y += cellHeight) {\n      this.ctx.beginPath();\n      this.ctx.moveTo(0, y + 0.5);\n      this.ctx.lineTo(this.canvas.nativeElement.width, y + 0.5);\n      this.ctx.strokeStyle = '#000';\n      this.ctx.stroke();\n    }\n\n    this.ctx.save();\n    this.layers.push(new Layer(this.canvas.nativeElement));\n    console.log(this.layers);\n    this.ctx.restore();\n  }\n\n  triangulatePolygon(vertices: number[]): number[][] {\n    const indices = earcut(vertices);\n    const triangles = [];\n    for (let i = 0; i < indices.length; i += 3) {\n      triangles.push([indices[i], indices[i + 1], indices[i + 2]]);\n    }\n    return triangles;\n  }  \n}"],"mappings":"AACA,OAAO,KAAKA,MAAM,MAAM,QAAQ;AAChC,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,SAASC,IAAI,QAAQ,cAAc;;;;AAGnC,MAKaC,aAAa;EAaxBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAJvB,KAAAC,aAAa,GAA6B;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAC,CAAE;IAsBhE,KAAAC,KAAK,GAAIC,KAAoB,IAAI;MAC/B,IAAI,IAAI,CAACC,MAAM,EAAE;MACjB,IAAID,KAAK,CAACE,GAAG,KAAK,QAAQ,EAAE;QAC1B,IAAI,CAACC,MAAM,GAAG,EAAE;QAChB,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE,IAAI,CAACD,MAAM,CAACE,GAAG,EAAE;QAChD,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC,CAACG,KAAK,EAAE;QACtB,IAAI,CAACC,GAAG,CAACC,OAAO,EAAE;QAClB,IAAI,CAACC,SAAS,GAAG,KAAK;OACvB,MAAM,IAAIV,KAAK,CAACE,GAAG,KAAK,WAAW,EAAE;QACpC,IAAI,IAAI,CAACC,MAAM,CAACE,MAAM,GAAG,CAAC,IAAI,IAAI,CAACD,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;UACpD,IAAI,CAACF,MAAM,CAACG,GAAG,EAAE;UACjB,IAAI,CAACF,MAAM,CAACE,GAAG,EAAE;UACjB,IAAI,CAACF,MAAM,CAAC,IAAI,CAACA,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,CAACE,KAAK,EAAE;UAC3C,IAAI,CAACC,GAAG,CAACC,OAAO,EAAE;SACnB,MAAM;UACL,IAAI,CAACN,MAAM,GAAG,EAAE;UAChB,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,GAAG,CAAC,EAAE;YAC7B,IAAI,CAACD,MAAM,CAACE,GAAG,EAAE;;UAEnB,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC,CAACG,KAAK,EAAE;UACtB,IAAI,CAACC,GAAG,CAACC,OAAO,EAAE;UAClB,IAAI,CAACC,SAAS,GAAG,KAAK;;QAExB;QACA;;IAEJ,CAAC;;IAGD,KAAAC,MAAM,GAAIX,KAAiB,IAAI;MAC7B,IAAI,IAAI,CAACC,MAAM,EAAE;MACjB,IAAI,IAAI,CAACS,SAAS,EAAE;QAClB,MAAME,WAAW,GAAG,IAAI,CAACC,OAAO,CAACb,KAAK,CAACc,OAAO,EAAEd,KAAK,CAACe,OAAO,CAAC;QAC9D,IAAIC,IAAI,CAACC,GAAG,CAACL,WAAW,CAACf,CAAC,GAAG,IAAI,CAACqB,IAAI,CAACrB,CAAC,CAAC,GAAG,CAAC,IAAImB,IAAI,CAACC,GAAG,CAACL,WAAW,CAACd,CAAC,GAAG,IAAI,CAACoB,IAAI,CAACpB,CAAC,CAAC,GAAG,CAAC,EAAE;UAC1F,MAAMqB,KAAK,GAAG,IAAI,CAACf,MAAM,CAAC,IAAI,CAACA,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC;UACjDc,KAAK,CAACZ,KAAK,EAAE;UACb,IAAI,CAACC,GAAG,CAACC,OAAO,EAAE;UAClB,IAAI,CAACS,IAAI,GAAG,IAAI,CAACL,OAAO,CAACb,KAAK,CAACc,OAAO,EAAEd,KAAK,CAACe,OAAO,CAAC;UACtD,IAAI,CAACnB,aAAa,CAACC,CAAC,GAAGG,KAAK,CAACc,OAAO;UACpC,IAAI,CAAClB,aAAa,CAACE,CAAC,GAAGE,KAAK,CAACe,OAAO;UACpC,IAAI,CAACP,GAAG,CAACY,SAAS,EAAE;UACpB;UACA,IAAI,CAACZ,GAAG,CAACa,MAAM,CAAE,IAAI,CAAClB,MAAM,CAAC,IAAI,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,CAACR,CAAC,GAAI,GAAG,EAAG,IAAI,CAACM,MAAM,CAAC,IAAI,CAACA,MAAM,CAACE,MAAM,GAAG,CAAC,CAAC,CAACP,CAAC,GAAI,GAAG,CAAC;UAC7G,IAAI,CAACU,GAAG,CAACc,MAAM,CAAE,IAAI,CAACJ,IAAI,CAACrB,CAAC,GAAI,GAAG,EAAG,IAAI,CAACqB,IAAI,CAACpB,CAAC,GAAI,GAAG,CAAC;UACzD,IAAI,CAACU,GAAG,CAACe,WAAW,GAAG,OAAO;UAC9B,IAAI,CAACf,GAAG,CAACgB,SAAS,GAAG,EAAE;UACvB,IAAI,CAAChB,GAAG,CAACiB,OAAO,GAAG,QAAQ;UAC3B,IAAI,CAACjB,GAAG,CAACkB,MAAM,EAAE;;;IAGvB,CAAC;IAGD,KAAAC,OAAO,GAAI3B,KAAiB,IAAI;MAC9B,IAAI,IAAI,CAACC,MAAM,EAAE;MACjB,IAAI,CAACiB,IAAI,GAAG,IAAI,CAACL,OAAO,CAACb,KAAK,CAACc,OAAO,EAAEd,KAAK,CAACe,OAAO,CAAC;MACtD,IAAI,IAAI,CAACZ,MAAM,CAACE,MAAM,GAAG,CAAC,IAAI,IAAI,CAACF,MAAM,CAAC,CAAC,CAAC,CAACN,CAAC,KAAK,IAAI,CAACqB,IAAI,CAACrB,CAAC,IAAI,IAAI,CAACM,MAAM,CAAC,CAAC,CAAC,CAACL,CAAC,KAAK,IAAI,CAACoB,IAAI,CAACpB,CAAC,EAAE;QAClG,IAAI,CAACY,SAAS,GAAG,KAAK;QACtB,IAAI,CAACN,MAAM,GAAG,EAAE;QAChB,IAAI,CAACH,MAAM,GAAG,IAAI;QAClB,MAAM2B,QAAQ,GAAa,IAAI,CAACzB,MAAM,CAAC0B,OAAO,CAACC,KAAK,IAAI,CAACA,KAAK,CAACjC,CAAC,EAAEiC,KAAK,CAAChC,CAAC,CAAC,CAAC;QAC3E,MAAMiC,SAAS,GAAe,IAAI,CAACC,kBAAkB,CAACJ,QAAQ,CAAC;QAC/DK,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;QACtB,IAAI,CAACI,IAAI,CAACC,IAAI,GAAG,IAAI,CAACzC,WAAW,CAAC0C,aAAa,CAAC,IAAI,CAAClC,MAAM,EAAE4B,SAAS,CAAC;QACvEE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC;QAC3B,IAAI,IAAI,CAACzC,WAAW,CAAC2C,UAAU,CAAC,IAAI,CAACnC,MAAM,CAAC,EAAE;UAC5C,IAAI,CAACR,WAAW,CAAC4C,QAAQ,EAAE,CAACC,SAAS,CAAC;YACpCC,IAAI,EAAEC,QAAQ,IAAG;cACfT,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEQ,QAAQ,CAAC;YACnD,CAAC;YACDC,KAAK,EAAEA,KAAK,IAAG;cACbV,OAAO,CAACU,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;YAC5C;WACD,CAAC;;OAEL,MAAM;QACL,IAAI,CAACjC,SAAS,GAAG,IAAI;;MAEvB,IAAI,CAACP,MAAM,CAACyC,IAAI,CAAC,IAAI,CAAC1B,IAAI,CAAC;MAC3B;MACA,IAAI,CAACd,MAAM,CAACwC,IAAI,CAAC,IAAItD,KAAK,CAAC,IAAI,CAACuD,MAAM,CAACC,aAAa,CAAC,CAAC;MACtD;IACF,CAAC;;IAnGC,IAAI,CAAC5B,IAAI,GAAG,IAAI3B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3B,IAAI,CAACmB,SAAS,GAAG,KAAK;IACtB,IAAI,CAACN,MAAM,GAAG,EAAE;IAChB,IAAI,CAACH,MAAM,GAAG,KAAK;IACnB,IAAI,CAACE,MAAM,GAAG,EAAE;IAChB,IAAI,CAACgC,IAAI,GAAG,IAAI3C,IAAI;EACtB;EAEAuD,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,MAAM,CAACC,aAAa,CAACG,qBAAqB,EAAE;IACnE,IAAI,CAACJ,MAAM,CAACC,aAAa,CAACI,KAAK,GAAG,IAAI,CAACL,MAAM,CAACC,aAAa,CAACK,WAAW;IACvE,IAAI,CAACN,MAAM,CAACC,aAAa,CAACM,MAAM,GAAG,IAAI,CAACP,MAAM,CAACC,aAAa,CAACO,YAAY;IACzE,IAAI,CAAC7C,GAAG,GAAG,IAAI,CAACqC,MAAM,CAACC,aAAa,CAACQ,UAAU,CAAC,IAAI,CAA6B;IACjF,IAAI,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EACxB;EAuFQ1C,OAAOA,CAAChB,CAAS,EAAEC,CAAS;IAClCmC,OAAO,CAACC,GAAG,CAAC,MAAMrC,CAAC,OAAOC,CAAC,UAAU,IAAI,CAACkD,UAAU,CAACQ,IAAI,SAAS,IAAI,CAACR,UAAU,CAACS,GAAG,EAAE,CAAC;IACxF,OAAO,IAAIlE,KAAK,CAACyB,IAAI,CAAC0C,KAAK,CAAC1C,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC+B,UAAU,CAACQ,IAAI,GAAG3D,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,EAAEmB,IAAI,CAAC0C,KAAK,CAAC1C,IAAI,CAACC,GAAG,CAAC,IAAI,CAAC+B,UAAU,CAACS,GAAG,GAAG3D,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;EACrI;EAEQyD,OAAOA,CAACI,SAAiB,EAAEC,UAAkB;IACnD,KAAK,IAAI/D,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACgD,MAAM,CAACC,aAAa,CAACI,KAAK,EAAErD,CAAC,IAAI8D,SAAS,GAAG,EAAE,EAAE;MACzE,IAAI,CAACnD,GAAG,CAACY,SAAS,EAAE;MACpB,IAAI,CAACZ,GAAG,CAACa,MAAM,CAACxB,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;MAC3B,IAAI,CAACW,GAAG,CAACc,MAAM,CAACzB,CAAC,GAAG,GAAG,EAAE,IAAI,CAACgD,MAAM,CAACC,aAAa,CAACM,MAAM,CAAC;MAC1D,IAAI,CAAC5C,GAAG,CAACe,WAAW,GAAG,MAAM;MAC7B,IAAI,CAACf,GAAG,CAACkB,MAAM,EAAE;;IAGnB,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAC+C,MAAM,CAACC,aAAa,CAACM,MAAM,EAAEtD,CAAC,IAAI8D,UAAU,GAAG,EAAE,EAAE;MAC3E,IAAI,CAACpD,GAAG,CAACY,SAAS,EAAE;MACpB,IAAI,CAACZ,GAAG,CAACa,MAAM,CAAC,CAAC,EAAEvB,CAAC,GAAG,GAAG,CAAC;MAC3B,IAAI,CAACU,GAAG,CAACc,MAAM,CAAC,IAAI,CAACuB,MAAM,CAACC,aAAa,CAACI,KAAK,EAAEpD,CAAC,GAAG,GAAG,CAAC;MACzD,IAAI,CAACU,GAAG,CAACe,WAAW,GAAG,MAAM;MAC7B,IAAI,CAACf,GAAG,CAACkB,MAAM,EAAE;;IAGnB,KAAK,IAAI7B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAACgD,MAAM,CAACC,aAAa,CAACI,KAAK,EAAErD,CAAC,IAAI8D,SAAS,EAAE;MACpE,IAAI,CAACnD,GAAG,CAACY,SAAS,EAAE;MACpB,IAAI,CAACZ,GAAG,CAACa,MAAM,CAACxB,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;MAC3B,IAAI,CAACW,GAAG,CAACc,MAAM,CAACzB,CAAC,GAAG,GAAG,EAAE,IAAI,CAACgD,MAAM,CAACC,aAAa,CAACM,MAAM,CAAC;MAC1D,IAAI,CAAC5C,GAAG,CAACe,WAAW,GAAG,MAAM;MAC7B,IAAI,CAACf,GAAG,CAACkB,MAAM,EAAE;;IAGnB,KAAK,IAAI5B,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,CAAC+C,MAAM,CAACC,aAAa,CAACM,MAAM,EAAEtD,CAAC,IAAI8D,UAAU,EAAE;MACtE,IAAI,CAACpD,GAAG,CAACY,SAAS,EAAE;MACpB,IAAI,CAACZ,GAAG,CAACa,MAAM,CAAC,CAAC,EAAEvB,CAAC,GAAG,GAAG,CAAC;MAC3B,IAAI,CAACU,GAAG,CAACc,MAAM,CAAC,IAAI,CAACuB,MAAM,CAACC,aAAa,CAACI,KAAK,EAAEpD,CAAC,GAAG,GAAG,CAAC;MACzD,IAAI,CAACU,GAAG,CAACe,WAAW,GAAG,MAAM;MAC7B,IAAI,CAACf,GAAG,CAACkB,MAAM,EAAE;;IAGnB,IAAI,CAAClB,GAAG,CAACqD,IAAI,EAAE;IACf,IAAI,CAACzD,MAAM,CAACwC,IAAI,CAAC,IAAItD,KAAK,CAAC,IAAI,CAACuD,MAAM,CAACC,aAAa,CAAC,CAAC;IACtDb,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC9B,MAAM,CAAC;IACxB,IAAI,CAACI,GAAG,CAACC,OAAO,EAAE;EACpB;EAEAuB,kBAAkBA,CAACJ,QAAkB;IACnC,MAAMkC,OAAO,GAAGzE,MAAM,CAACuC,QAAQ,CAAC;IAChC,MAAMG,SAAS,GAAG,EAAE;IACpB,KAAK,IAAIgC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,OAAO,CAACzD,MAAM,EAAE0D,CAAC,IAAI,CAAC,EAAE;MAC1ChC,SAAS,CAACa,IAAI,CAAC,CAACkB,OAAO,CAACC,CAAC,CAAC,EAAED,OAAO,CAACC,CAAC,GAAG,CAAC,CAAC,EAAED,OAAO,CAACC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE9D,OAAOhC,SAAS;EAClB;;AAtKWtC,aAAa,C;mBAAbA,aAAa,EAAAuE,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAb1E,aAAa,C;QAAbA,aAAa;EAAA2E,SAAA;EAAAC,SAAA,WAAAC,oBAAAC,EAAA,EAAA/D,GAAA;IAAA,IAAA+D,EAAA;;;;;;;;;;;eAAb/D,GAAA,CAAAT,KAAA,CAAAyE,MAAA,CAAa;MAAA,UAAAR,EAAA,CAAAS,eAAA,wBAAAC,2CAAAF,MAAA;QAAA,OAAbhE,GAAA,CAAAG,MAAA,CAAA6D,MAAA,CAAc;MAAA,uBAAAG,yCAAAH,MAAA;QAAA,OAAdhE,GAAA,CAAAmB,OAAA,CAAA6C,MAAA,CAAe;MAAA;;;;;;;;MAHfR,EAAA,CAAAY,SAAA,sBAAyB;;;;;SAGzBnF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}